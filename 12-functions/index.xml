<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functions on FEWD</title>
    <link>/12-functions/</link>
    <description>Recent content in Functions on FEWD</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/12-functions/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Agenda</title>
      <link>/12-functions/agenda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/12-functions/agenda/</guid>
      <description> Discuss Functions
 Code Along: Geometry Formulas using Functions
 Code Along: HiLo
 Lab: Complete HiLo
  </description>
    </item>
    
    <item>
      <title>Defining Functions</title>
      <link>/12-functions/defining-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/12-functions/defining-functions/</guid>
      <description>Defining a Function  A function definition is code that stipulates what the function can do
 Use the function keyword to define a function
 Functions can be given a name
 The name must be followed by parentheses
 The opening and closing curly braces indicate a “code block”
 The statements for your function goes within the code block
 Simply defining the function will not run this code, this function must be “called” in order for the code inside the function to be run</description>
    </item>
    
    <item>
      <title>Calling Functions</title>
      <link>/12-functions/calling-functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/12-functions/calling-functions/</guid>
      <description>Calling a Function  Calling a function means you are using the function (as opposed to defining a function which only tells us what the function can do)
 To call a function you simply write function name followed by parentheses (don’t forget the parentheses!)
 Now you can call this function as many times as you want
  // define / declare a function named shout() // by itself this doesn&#39;t do anything, we must &amp;quot;Call&amp;quot; it // in order to use it function shout() { alert(&amp;quot;HELLO!</description>
    </item>
    
    <item>
      <title>Working with Parameters</title>
      <link>/12-functions/working-with-parameters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/12-functions/working-with-parameters/</guid>
      <description>Declaring Functions that need information  Some functions need additional information in order to perform a specific task
 This additional information is referred to as “parameters”
 To provide parameters to a function, you specify them inside the parentheses after the parameter name
 The parameters are used like variables within the function body
 We use the return keyword when we want our function to &amp;ldquo;give us back&amp;rdquo; a value</description>
    </item>
    
    <item>
      <title>Code Along - Geometry Calculator</title>
      <link>/12-functions/code-along-geometry-calculator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/12-functions/code-along-geometry-calculator/</guid>
      <description> Code Along: Geometry Calculator  Using Atom, open the folder called geometry_calculator in your lesson_12_files folder. You will be using these files as starting off point.
 During this exercise, we&amp;rsquo;ll be doing the following:
 We&amp;rsquo;ll use javascript to implement an app that calculates geometry functions   </description>
    </item>
    
    <item>
      <title>Single Responsibility Principle</title>
      <link>/12-functions/single-responsibility-principle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/12-functions/single-responsibility-principle/</guid>
      <description>Single Responsibility Principle (SRP)  SRP is a programming best practice that advocates modular code
 Put another way, your programs should be broken up in such a way where each part is responsible for only one &amp;ldquo;thing&amp;rdquo; or domain
 SRP is often applied to functions
  Applying SRP to Functions  This concepts calls for your functions to only be &amp;ldquo;responsible&amp;rdquo; for one thing
 Often you&amp;rsquo;ll find that the logic in your functions are doing too much (for example: making calculations AND displaying the result to the screen)</description>
    </item>
    
    <item>
      <title>Code Along - HiLo</title>
      <link>/12-functions/code-along-hilo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/12-functions/code-along-hilo/</guid>
      <description> Code Along: HiLo  Using Atom, open the folder called hilo in your lesson_12_files folder. You will be using these files as starting off point.
 During this exercise, we&amp;rsquo;ll be doing the following:
 We&amp;rsquo;ll use javascript to implement a guessing game   </description>
    </item>
    
    <item>
      <title>Lab - HiLo</title>
      <link>/12-functions/lab-hilo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/12-functions/lab-hilo/</guid>
      <description>Lab: Complete HiLo  Form groups and work together to complete the HiLo application
 Instructions: Add the following functionality
 The secret number should be randomly generated
 Players should be limited to only 5 guesses
 If the player reaches 5 guesses without guessing the correct number then an error message with appear
 The game should reset after 5 guesses has been reached or after the secret number has been correctly guessed</description>
    </item>
    
  </channel>
</rss>